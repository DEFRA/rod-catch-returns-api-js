name: build

on:
  pull_request:
    branches:
      - develop
      - main
  push:
    branches:
      - develop
      - main

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest
    env:
      TZ: Europe/London
    services:
      postgres:
        image: postgres:15.2
        env:
          POSTGRES_DB: rcr_api
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: npm ci
      - name: Create .env file
        run: |
          echo -e "PORT=5000\n\
            DATABASE_HOST=localhost\n\
            DATABASE_USERNAME=postgres\n\
            DATABASE_PASSWORD=password\n\
            DATABASE_PORT=5432" > .env
      - name: Run migrations
        run: npm run migrate:build && npm run migrate:up
      - name: Run tests
        run: npm run test:coverage
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@v3.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  new-version:
    name: new-version
    runs-on: ubuntu-latest
    needs: tests
    if: ${{ github.event_name == 'push' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
      - name: Install dependencies
        run: npm ci
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Run versioning script
        run: . ./scripts/github/deploy.sh
        env:
          GITHUB_AUTH: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          BRANCH: ${{ steps.extract_branch.outputs.branch }}
          HUSKY: 0
